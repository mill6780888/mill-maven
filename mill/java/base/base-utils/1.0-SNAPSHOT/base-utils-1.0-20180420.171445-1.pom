<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<!-- maven模块版本 -->
	<modelVersion>4.0.0</modelVersion>
	<!-- 整个系统的名称 -->
	<groupId>mill.java.base</groupId>
	<!-- 子模块名称 -->
	<artifactId>base-utils</artifactId>
	<!-- 打包类型，可取值：jar,war等等， -->
	<packaging>jar</packaging>
	<!-- 继承关系 <parent><groupId>com.thoughtworks.xstream</groupId><artifactId>xstream-parent</artifactId><version>1.4.3</version></parent> -->
	<version>1.0-SNAPSHOT</version>
	<name>base-utils</name>
	<url>http://maven.apache.org</url>
	<properties>
	     <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>  
	<github.global.server>github</github.global.server>
		<junit.version>4.11</junit.version>
	</properties>


	<!-- 依赖项 -->
	<dependencies>
		<dependency>
			<!-- 依赖项的groupId -->
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>${junit.version}</version>
			<!-- 依赖项的适用范围： compile，缺省值，适用于所有阶段，会随着项目一起发布。 provided，类似compile，期望JDK、容器或使用者会提供这个依赖。如servlet.jar。 
				runtime，只在运行时使用，如JDBC驱动，适用运行和测试阶段。 test，只在测试时使用，用于编译和运行测试代码。不会随项目发布。 system，类似provided，需要显式提供包含依赖的jar，Maven不会在Repository中查找它。 
				之前例子里的junit就只用在了test中。 -->
			<scope>test</scope>
			<!-- 当产生冲突的时候可以在这里添加排除依赖 <exclusions><exclusion><groupId>org.freemarker</groupId><artifactId>freemarker</artifactId></exclusion></exclusions> -->
		</dependency>
	</dependencies>
	<build>
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-compiler-plugin</artifactId>
					<version>2.3.2</version>
					<configuration>
						<source>1.6</source>
						<target>1.6</target>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>
	<!-- 生成依赖冲突报告 运行：mvn project-info-reports:dependencies，来查看依赖项报告。 -->
	<reporting>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-project-info-reports-plugin</artifactId>
			</plugin>
		<plugin>
			<artifactId>maven-deploy-plugin</artifactId>
			<version>2.8.1</version>
			<configuration>
				<altDeploymentRepository>internal.repo::default::file:${project.build.directory}</altDeploymentRepository>
			</configuration>
		</plugin>
		</plugins>
	</reporting>
</project>
